     /****************************************************************/
     /*  PROGRAM NAME: SBSSEGMRG                                     */
     /*  DESCRIPTION.: BRANCH MERGER PROG for SBS/SME SBSSEGMENT     */
     /*  DATE CREATED: 12Sept2008                                    */
     /*  AUTHOR......: TMPDM2                                        */
     /****************************************************************/
     fSBSSEGMENTuf   e             disk    prefix(a)
     fLBSSEGMENTuf A e             disk    rename(SBSSEGMENR:LBSSEGMENR)
     f                                     prefix(m)
     fsbsimacmapif   e           k disk    prefix(x)
     fsbscycdt  if   e             disk    prefix(y)
     fsbsthrpt3 O    E             PRINTER
     daccnbr10         s             10
     dzTemp50          s                   like(aSEGEXPREF)
     dRundate          s               d   inz(*SYS)
     dRundate2         s               d
      *
     D ds_SBSSEGMENR E DS                  EXTNAME(SBSSEGMENT)
     D                                     INZ
     D                                     prefix(a)
     D ds_LBSSEGMENR E DS                  EXTNAME(LBSSEGMENT)
     D                                     INZ
     D                                     prefix(m)
      *
     c                   dou       yLoadctry = 'TH'
     c                   read      sbscycdt
     c                   enddo
      *
     c                   eval      SEGTOT = 0
     c                   eval      SEGCTR = 0
     /****************************************************************/
     /*  SBSSEGMENT                                                  */
     /*                                                              */
     /****************************************************************/
     c                   read      SBSSEGMENT
     c                   dow       not %eof
     c                   eval      SEGTOT   = SEGTOT + 1
     c                   eval      accnbr10=%subst(aACCNBR:1:10)
     c     accnbr10      chain     sbsimacmap
     c                   if        %found
     c                   if        aLoadctry = 'TH' and aPRODCTGRY = 'RBK'
     c                   if        xLoadctry = 'TH'
     c                             and     xSnapdt   = yCursnapdt
     c                             and not %NULLIND(xNEWACC#)
     c                             and not %NULLIND(xNEWACTID)
      *
DMB  c*                  movel     ds_SBSSEGMENR ds_LBSSEGMENR
DMB  c                   eval      ds_LBSSEGMENR = ds_SBSSEGMENR
      *
DMB  c                   eval      mMRGLOADDT = Rundate
DMB  c                   eval      mMRGSNAPDT = yCursnapdt
DMB  c                   eval      mNEWACC# = xNEWACC#
DMB  c                   eval      mNEWACTID = xNEWACTID
      *
DMB  c                   write     LBSSEGMENR
      *
DTE  c                   eval      %NULLIND(aMRGLOADDT) = *OFF
DTE  c                   eval      %NULLIND(aMRGSNAPDT) = *OFF
DMB  c                   eval      aMRGLOADDT = Rundate
DMB  c                   eval      aMRGSNAPDT = yCursnapdt
     c                   eval      aACCNBR    = xNEWACC#
     c                   eval      aACCID     = xNEWACTID
     c                   eval      zTemp50 = %subst(aSEGEXPREF:1:5) +
     c                             %trim(xNEWACC#)
     c                   eval      aSEGEXPREF = zTemp50
     c                   update    SBSSEGMENR
     c                   eval      SEGCTR   = SEGCTR + 1
     c                   endif
     c                   endif
     c                   endif
     c                   read      SBSSEGMENT
     c                   enddo
     /****************************************************************/
     c                   eval      SBSTHF1   =  'JOB completed SBSSEGMRG for '+
     c                             'SBSCYCDT = ' +
     c                             yLoadctry + ' / ' +  %char(yCursnapdt)
     c                   write     HEADER1
      *
     c                   eval      *inlr = *on
