     /****************************************************************/
     /*  PROGRAM NAME: SMEDEPMRG                                     */
     /*  DESCRIPTION.: BRANCH MERGER PROG for SME                    */
     /*  DATE CREATED: 12Sept2008                                    */
     /*  AUTHOR......: TMPDM2                                        */
     /****************************************************************/
     fsmedep    uf   e             disk    prefix(a)
     flmedep    uf A e             disk    rename(depr:ldepr)
     f                                     prefix(m)
     fsmecolfac uf   e             disk    prefix(b)
     fLmecolfac uf A e             disk    rename(SBSCOLFACR:LBSCOLFACR)
     f                                     prefix(k)
     fsmedrivrs uf   e             disk    prefix(c)
     flmedrivrs uf A e             disk    rename(RDRIVERS:LDRIVERS)
     f                                     prefix(d)
     fsbsimacmapif   e           k disk    prefix(x)
     fsbscycdt  if   e             disk    prefix(y)
     fsbsthrpt2 O    E             PRINTER
     dRundate          s               d   inz(*SYS)
     dRundate2         s               d
     daccnbr10         s             10
DMB  D ds_depr       E DS                  EXTNAME(smedep)
DMB  D                                     INZ
DMB  D                                     prefix(a)
DMB  D ds_ldepr      E DS                  EXTNAME(lmedep)
DMB  D                                     INZ
DMB  D                                     prefix(m)
      *
DMB  D ds_SBSCOLFACR E DS                  EXTNAME(smecolfac)
DMB  D                                     INZ
DMB  D                                     prefix(b)
DMB  D ds_LBSCOLFACR E DS                  EXTNAME(lmecolfac)
DMB  D                                     INZ
DMB  D                                     prefix(k)
      *
DMB  D ds_RDRIVERS   E DS                  EXTNAME(smedrivrs)
DMB  D                                     INZ
DMB  D                                     prefix(c)
DMB  D ds_LDRIVERS   E DS                  EXTNAME(lmedrivrs)
DMB  D                                     INZ
DMB  D                                     prefix(d)
      *
     c                   dou       yLoadctry = 'TH'
     c                   read      sbscycdt
     c                   enddo
      *
     c                   eval      DEPTOT = 0
     c                   eval      DRVTOT = 0
     c                   eval      COLTOT = 0
      *
     c                   eval      DEPCTR = 0
     c                   eval      DRVCTR = 0
     c                   eval      COLCTR = 0
     /****************************************************************/
     /*  SMEDEP                                                     */
     /*                                                              */
     /****************************************************************/
     c                   read      smedep
     c                   dow       not %eof
     c                   eval      DEPTOT   = DEPTOT + 1
     c                   eval      accnbr10=%subst(aACCNBR:1:10)
     c     accnbr10      chain     sbsimacmap
     c                   if        %found
     c                   if        aLoadctry = 'TH'
     c                   if        xLoadctry = 'TH'
     c                             and     xSnapdt   = yCursnapdt
     c                             and     not %NULLIND(xNEWACC#)
     c                             and     not %NULLIND(xNEWACTID)
      *
DTE  c                   if        %NULLIND(aDEP1EXRCDT) = *ON
DTE  c                   eval      %NULLIND(mDEP1EXRCDT) = *ON
DTE  c                   else
DTE  c                   eval      %NULLIND(mDEP1EXRCDT) = *OFF
DTE  c                   endif
      *
DMB  c*                  movel     depr          ldepr
DMB  c                   eval      ds_ldepr   = ds_depr
      *
DMB  c                   eval      mMRGLOADDT = Rundate
DMB  c                   eval      mMRGSNAPDT = yCursnapdt
DMB  c                   eval      mNEWACC# = xNEWACC#
DMB  c                   eval      mNEWACTID = xNEWACTID
      *
DMB  c                   write     ldepr
      *
DTE  c                   eval      %NULLIND(aMRGLOADDT) = *OFF
DTE  c                   eval      %NULLIND(aMRGSNAPDT) = *OFF
DMB  c                   eval      aMRGLOADDT = Rundate
DMB  c                   eval      aMRGSNAPDT = yCursnapdt
     c                   eval      aACCNBR = xNEWACC#
     c                   eval      aACCID = xNEWACTID
     c                   update    depr
     c                   eval      DEPCTR   = DEPCTR + 1
     c                   endif
     c                   endif
     c                   endif
     c                   read      smedep
     c                   enddo
     /****************************************************************/
     /*  SMECOLFAC                                                   */
     /*                                                              */
     /****************************************************************/
     c                   read      smecolfac
     c                   dow       not %eof
     c                   eval      COLTOT   = COLTOT + 1
     c                   eval      accnbr10=%subst(bACCSRCKEY:1:10)
     c     accnbr10      chain     sbsimacmap
     c                   if        %found
     c                   if        bLoadctry = 'TH'
     c                   if        xLoadctry = 'TH'
     c                             and     xSnapdt   = yCursnapdt
     c                             and     not %NULLIND(xNEWACC#)
     c                             and     not %NULLIND(xNEWACTID)
      *
DMB  c*                  movel     SBSCOLFACR    LBSCOLFACR
DMB  c                   eval      ds_LBSCOLFACR = ds_SBSCOLFACR
      *
DMB  c                   eval      kMRGLOADDT = Rundate
DMB  c                   eval      kMRGSNAPDT = yCursnapdt
DMB  c                   eval      kNEWACC# = xNEWACC#
DMB  c                   eval      kNEWACTID = xNEWACTID
      *
DMB  c                   write     LBSCOLFACR
      *
DTE  c                   eval      %NULLIND(bMRGLOADDT) = *OFF
DTE  c                   eval      %NULLIND(bMRGSNAPDT) = *OFF
DMB  c                   eval      bMRGLOADDT = Rundate
DMB  c                   eval      bMRGSNAPDT = yCursnapdt
     c                   eval      bACCSRCKEY = xNEWACC#
     c                   eval      bACCID = xNEWACTID
      *
     c                   update    SBSCOLFACR
     c                   eval      COLCTR   = COLCTR + 1
     c                   endif
     c                   endif
     c                   endif
     c                   read      smecolfac
     c                   enddo
     /****************************************************************/
     /*  SMEDRIVRS                                                   */
     /*                                                              */
     /****************************************************************/
     c                   read      smedrivrs
     c                   dow       not %eof
     c                   eval      DRVTOT   = DRVTOT + 1
     c                   eval      accnbr10=%subst(cACCNBR:1:10)
     c     accnbr10      chain     sbsimacmap
     c                   if        %found
     c                   if        cLoadctry = 'TH' and cLOADSRC = 'DDS'
     c                   if        xLoadctry = 'TH'
     c                             and     xSnapdt   = yCursnapdt
     c                             and     not %NULLIND(xNEWACC#)
     c                             and     not %NULLIND(xNEWACTID)
      *
DTE  c                   if        %NULLIND(cDEP1EXRCDT) = *ON
DTE  c                   eval      %NULLIND(dDEP1EXRCDT) = *ON
DTE  c                   else
DTE  c                   eval      %NULLIND(dDEP1EXRCDT) = *OFF
DTE  c                   endif
      *
DMB  c*                  movel     RDRIVERS      LDRIVERS
DMB  c                   eval      ds_LDRIVERS = ds_RDRIVERS
      *
DMB  c                   eval      dMRGLOADDT = Rundate
DMB  c                   eval      dMRGSNAPDT = yCursnapdt
DMB  c                   eval      dNEWACC# = xNEWACC#
DMB  c                   eval      dNEWACTID = xNEWACTID
      *
DMB  c                   write     LDRIVERS
      *
DTE  c                   eval      %NULLIND(cMRGLOADDT) = *OFF
DTE  c                   eval      %NULLIND(cMRGSNAPDT) = *OFF
DMB  c                   eval      cMRGLOADDT = Rundate
DMB  c                   eval      cMRGSNAPDT = yCursnapdt
     /*  3 fields to update here
     c                   eval      cACCNBR    = xNEWACC#
     c                   eval      cACCID     = xNEWACTID
     c                   eval      cDRIVERKEY = xNEWACC#
      *
     c                   update    RDRIVERS
     c                   eval      DRVCTR   = DRVCTR + 1
     c                   endif
     c                   endif
     c                   endif
     c                   read      smedrivrs
     c                   enddo
     /****************************************************************/
     c                   eval      SBSTHF1   =  'JOB completed SMEDEPMRG for '+
     c                             'SBSCYCDT = ' +
     c                             yLoadctry + ' / ' +  %char(yCursnapdt)
     c                   write     HEADER1
     c*
     c                   eval      *inlr = *on
